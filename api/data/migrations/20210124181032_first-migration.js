exports.up = async (knex) => {
  await knex.schema
    .createTable('users', (tbl) => {
      tbl.increments('user_id')
      tbl.string('username', 200)
        .notNullable()
        .unique()
      tbl.string('password', 200)
        .notNullable()
      tbl.timestamps(false, true)
    })
    .createTable('recipes', tbl => {
      tbl.increments('recipe_id')
      tbl.string('recipe_name', 200)
        .unique()
        .notNullable()
      tbl.string('source', 200)
      tbl.integer('user_id')
        .unsigned()
        .notNullable()
        .references('user_id')
        .inTable('users')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
    })
    .createTable('steps', tbl => {
      tbl.increments('step_id')
      tbl.integer('step_number')
        .unsigned()
        .notNullable()
      tbl.text('instructions')
        .notNullable()
      tbl.integer('recipe_id')
        .unsigned()
        .notNullable()
        .references('recipe_id')
        .inTable('recipes')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
    })
    .createTable('ingredients', tbl => {
      tbl.increments('ingredient_id')
      tbl.string('ingredient_name', 200)
      tbl.decimal('quantity')
      tbl.string('measurement')
    })
    .createTable('recipe_ing', tbl => {
      tbl.integer('step_id')
        .unsigned()
        .notNullable()
        .references('step_id')
        .inTable('steps')
      tbl.integer('ingredient_id')
        .unsigned()
        .notNullable()
        .references('ingredient_id')
        .inTable('ingredients')
    })
}

exports.down = async (knex) => {
  await knex.schema
  .dropTableIfExists('recipe_ing')
  .dropTableIfExists('ingredients')
  .dropTableIfExists('steps')
  .dropTableIfExists('recipes')
  .dropTableIfExists('users')
}
